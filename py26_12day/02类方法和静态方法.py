"""
============================
Author:柠檬班-木森
Time:2020/1/20   20:28
E-mail:3247119728@qq.com
Company:湖南零檬信息技术有限公司
============================
"""
"""
对象方法（实例方法）：
    对象方法的第一个参数，是self,self代表的是对象本身
    只能通过对象去调用的：对象.方法名（）


类方法：
    类方法的定义：在定义的方法前加一个@classmethod。
    类方法的第一个参数，是cls,cls代表的是类本身
    既可以通过对象去调用，也可以通过类去调用：对象.方法名（）  类.方法名（）
    
    应用场景：如果这个方法以类为主体去调用，方法内部不会涉及到对象属性和对象方法的使用，那么该方法就应该定义为类方法
    

静态方法：
    静态方法的定义：在定义的方法前加一个@staticmethod。
    没有必须要定义的固定参数
    既可以通过对象去调用，也可以通过类去调用：对象.方法名（）  类.方法名（）

    应用场景：方法内部既不会使用类属性和类方法，也不会使用对象属性和对象方法。
    



"""


class TestClass:
    attr = 100

    def __init__(self,name,age):
        self.name = name
        self.age = age

    def func1(self):
        print("对象方法：一")

    @classmethod
    def func111(cls):
        print("这个是类方法：func111")

    @staticmethod
    def func():
        print("这个是静态方法：func")


t1 = TestClass("小明",18)

"""
需求一：定义一个方法去打印这个对象的信息（名字和年龄）？  定义为对象方法

需求二：定义一个方法，去打印类属性attr*100的值？   定义为类方法

需求三：定义一个方法，打印一个乘法口诀表？    定义为静态方法

"""





# ------------对象方法----------------
# 对象可以直接调用对象方法
# t1.func1()
# 类不用直接调用对象方法
# TestClass.func1()


# -------------类方法-------------、
t1.func111()
TestClass.func111()


