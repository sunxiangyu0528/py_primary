"""
======================
Author: 柠檬班-小简
Time: 2021/12/20 20:55
Project: py47-编码技术
Company: 湖南零檬信息技术有限公司
======================
"""
"""
列表数据类型(list)： py47个列表
列表定义：列表变量名 = [成员1, 成员2, 成员3]
1、有序的。有顺序和位置。有索引，从0开始。
2、有多个成员数据, 成员之间用逗号隔开。
3、可以是任意数据类型。
4、数据可以重复的。

操作：
  增删改查

查看内存地址：
id(数据变量名)

不可变类型(定义之后不能够对数据本身进行修改)：
字符串、整数、浮点数、布尔值
# str1 = "hello world"
# str1.replace(" ", " !!! ")
# print(str1)

可变类型 - 定义之后，可以对数据本身进行增删改查
列表
"""
nmb_py47 = ["明xi",123, "莫名", "辰", "一锅粥", "de", True, 123, ["YT", "湫"], "一锅粥"]

# ===================     成员运算符   ====================
# 成员 in 列表/字符串  如果是成员之一，则为True,否则为False
# 成员 not in 列表/字符串  如果不是成员之一，则为True,否则为False
print("恩" in nmb_py47)
print("恩" not in nmb_py47)

# ===================     删除操作   ====================
# del 列表变量名[索引]
del nmb_py47[2]
print(nmb_py47)
# 列表变量名.pop()  列表变量名.pop(索引)
nmb_py47.pop()  # 默认删除列表的最后一个。返回最后一个值。
print(nmb_py47)
nmb_py47.pop(-3)
print(nmb_py47)
# 列表变量名.remove(值)
nmb_py47.remove(123)
print(nmb_py47)

# 删除整个列表
# del nmb_py47
# print(nmb_py47)  # NameError: name 'nmb_py47' is not defined

# 清空整个列表 - 列表变量名.clear() - 变成空列表
nmb_py47.clear()
print(nmb_py47)

# # ===================     获取列表长度、统计某个成员在列表中出现的次数   ====================
# print(len(nmb_py47))
# print(nmb_py47.count("一锅粥"))
#
# # ===================     修改数据   ==================== -
# # 把某个位置的值，更换了
# nmb_py47[3] = "帝辛"
# print(nmb_py47)



# ===================     新增数据   ==================== -
# # 列表变量名.append(值) -- 追加在列表末尾
# print(nmb_py47)
# nmb_py47.append("唯命")
# print(nmb_py47)
#
# # 列表变量名.insert(索引, 值)  -- 在某一个索引位置插入某一个数据
# nmb_py47.insert(0, "古董")
# print(nmb_py47)
#
# # 把另外一个列表，合并到当前列表当中。
# # 列表变量名.extend(其它列表)  其它列表的成员，逐一增加到当前列表的末尾。
# sub_py47 = ["十一", "小小", "大树", "bing"]
# nmb_py47.extend(sub_py47)
# print(nmb_py47)




# ===================     取值   ==================== -
# 列表变量名[索引]
# print(py47[0])  # 最常用
# print(py47[-2])
# print(py47[:3])  # 取了多个成员，取出来的仍然是列表
# print(py47[:6:2])  # 取了多个成员，取出来的仍然是列表
#
# # 取索引 - 先获取索引位置。场景是：你已经知道了列表当中一定有某个成员，但是不知道在哪个位置。
# # 列表变量名.index(值)
# # 获取列表当中第一次出现时的索引
# index = py47.index("一锅粥")
# print(index)
#
# # 取列表中嵌套的列表
# # 第一步：获取嵌套列表。
# # list_inner = py47[-2]
# # print(list_inner)
# # print(list_inner[0])
# print(py47[-2][0])